/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-13 15:54:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.lec.beans.*;

public final class shop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1604305648486L));
    _jspx_dependants.put("jar:file:/C:/Users/gbdld/Dropbox/JB10/SemiProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SemiProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.lec.beans");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

   // Controller 로부터 결과 데이터 받음
ProductDTO[] arr = (ProductDTO[]) request.getAttribute("list");

      out.write("\n");
      out.write("<!-- 메인 페이지  -->\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Jua&display=swap\"\n");
      out.write("   rel=\"stylesheet\">\n");
      out.write("<script src=\"https://kit.fontawesome.com/b95da9d126.js\"\n");
      out.write("   crossorigin=\"anonymous\"></script>\n");
      out.write("<title>쇼핑</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/shop.css\">\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   <!-- 헤더 -->\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp", out, false);
      out.write("\n");
      out.write("   <div id=\"list_btn\">\n");
      out.write("      <input type=\"button\" value=\"전체\" onclick=\"location='shop.do?kind=all'\">\n");
      out.write("      <input type=\"button\" value=\"샴푸\"\n");
      out.write("         onclick=\"location='shop.do?kind=shampoo'\"> <input\n");
      out.write("         type=\"button\" value=\"간식\" onclick=\"location='shop.do?kind=snack'\">\n");
      out.write("      <input type=\"button\" value=\"사료\" onclick=\"location='shop.do?kind=rice'\">\n");
      out.write("      <input type=\"button\" value=\"기타\" onclick=\"location='shop.do?kind=etc'\">\n");
      out.write("   </div>\n");
      out.write("   <h1>쇼핑</h1>\n");
      out.write("\n");
      out.write("   <br>\n");
      out.write("   <br>\n");
      out.write("   ");

      int totalCnt = 0;
   int cnt = 0;
   if (arr != null) {
      for (int i = 0; i < arr.length; i++) {
         totalCnt++;
      }
   }
   System.out.println("totalCNT: " + totalCnt);
   System.out.println("-------1: " + totalCnt / 4);
   System.out.println("-------2: " + totalCnt % 4);
   
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("   <!-- 컨텐츠B -->\n");
      out.write("   <section class=\"conF\">\n");
      out.write("\n");
      out.write("      <div class=\"containerF\">\n");
      out.write("         ");

            if (session.getAttribute("c_num") != null) {
            int c_num = Integer.parseInt(((String) session.getAttribute("c_num")));
            if (c_num == 1) {
         
      out.write("\n");
      out.write("\n");
      out.write("         <button class=\"editBt\" onclick=\"location.href = 'shopWrite.do'\">상품\n");
      out.write("            추가</button>\n");
      out.write("         <button class=\"manageBt\" onclick=\"location.href = 'shopEdit.do'\">상품\n");
      out.write("            관리</button>\n");
      out.write("         ");

            } else {
         }

         }
         
      out.write("\n");
      out.write("      </div>\n");
      out.write("   </section>\n");
      out.write("   ");

   	 
      if (arr != null) {
      if (totalCnt % 4 == 0) {
         for (int i = 0; i < totalCnt / 4; i++) { // for 1
   
      out.write("\n");
      out.write("   <section class\"=conBody\">\n");
      out.write("      <div id=\"dddd\">\n");
      out.write("         <table>\n");
      out.write("            ");

               for (int j = 0; j < 4; j++) { // for 2
            
      out.write("\n");
      out.write("            <th>\n");
      out.write("            \t");
      out.print(arr[cnt].getPro_content() );
      out.write("<br>\n");
      out.write("               이름 : ");
      out.print(arr[cnt].getPro_name());
      out.write("<br> \n");
      out.write("               가격 : ");
      out.print(arr[cnt].getPro_price());
      out.write("<i class=\"fas fa-bone\"></i><br> \n");
      out.write("               재고 : ");
      out.print(arr[cnt].getPro_cnt());
      out.write("<br>\n");
      out.write("               <input id=\"pCnt\" class=\"");
      out.print(cnt );
      out.write("\" type=\"hidden\" value=\"");
      out.print(arr[cnt].getPro_cnt());
      out.write("\">\n");
      out.write("               <input id=\"pNum\" class=\"");
      out.print(cnt );
      out.write("\" type=\"hidden\" value=\"");
      out.print(arr[cnt].getPro_num());
      out.write("\">\n");
      out.write("              \n");
      out.write("               ");

                  if (arr[cnt].getPro_cnt() == 0) {
               
      out.write("\n");
      out.write("               \n");
      out.write("               <button disabled>재고소진</button>\n");
      out.write("              </th>\n");
      out.write("            ");

               } else {
               if (session.getAttribute("c_num") == null) {
            
      out.write("\n");
      out.write("            <button onclick=\"location.href='login.do'\">구매하기</button>\n");
      out.write("            ");

               } else {
            
      out.write("\n");
      out.write("            <button onclick=\"shoppingOpen('");
      out.print(arr[cnt].getPro_num());
      out.write("')\">구매하기</button>\n");
      out.write("            ");

               }
            }
            
      out.write("\n");
      out.write("            </th>\n");
      out.write("            ");

               cnt++;
            if (cnt == totalCnt)
               break;
            } // end for 2
            
      out.write("\n");
      out.write("         </table>\n");
      out.write("      </div>\n");
      out.write("      ");

      if (cnt == totalCnt)
      break;
   } // end for 1
   } else {
      for (int i = 0; i < totalCnt / 4 + 1; i++) { // for 1
         
      out.write("\n");
      out.write("      <div id=\"dddd\">\n");
      out.write("         <table>\n");
      out.write("            ");

                     for (int j = 0; j < 4; j++) { // for 2
                  
      out.write("\n");
      out.write("            <th>");
      out.print(arr[cnt].getPro_content() );
      out.write("<br>\n");
      out.write("               이름 : ");
      out.print(arr[cnt].getPro_name());
      out.write("<br> \n");
      out.write("               가격 : ");
      out.print(arr[cnt].getPro_price());
      out.write("<i class=\"fas fa-bone\"></i><br> \n");
      out.write("               재고 : ");
      out.print(arr[cnt].getPro_cnt() );
      out.write("<br>\n");
      out.write("               <input id=\"pCnt\" type=\"hidden\" value=\"");
      out.print(arr[cnt].getPro_cnt());
      out.write("\">\n");
      out.write("               <input id=\"pNum\" type=\"hidden\" value=\"");
      out.print(arr[cnt].getPro_num());
      out.write("\">\n");
      out.write("               ");

                        if (arr[cnt].getPro_cnt() == 0) {
                     
      out.write("\n");
      out.write("\n");
      out.write("               <button disabled>재고소진</button></th>\n");
      out.write("            ");

                     } else {
                     if (session.getAttribute("c_num") == null) {
                  
      out.write("\n");
      out.write("            <button onclick=\"location.href='login.do'\">구매하기</button>\n");
      out.write("            ");

                     } else {
                  
      out.write("\n");
      out.write("            <button onclick=\"shoppingOpen('");
      out.print(arr[cnt].getPro_num());
      out.write("')\">구매하기</button>\n");
      out.write("            ");

                     }
                  }
                  
      out.write("\n");
      out.write("            </th>\n");
      out.write("            ");

                     cnt++;
                  if (cnt == totalCnt)
                     break;
                  } // end for 2
                  
      out.write("\n");
      out.write("         </table>\n");
      out.write("      </div>\n");
      out.write("      ");

            if (cnt == totalCnt)
            break;
         } // end for 4
   } // end for 3
   } // end if
   
      out.write("\n");
      out.write("   </section>\n");
      out.write("\n");
      out.write("\n");
      out.write("   <!-- 푸터 -->\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script\n");
      out.write("src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"JS/shop.js\"></script>\n");
      out.write("\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
