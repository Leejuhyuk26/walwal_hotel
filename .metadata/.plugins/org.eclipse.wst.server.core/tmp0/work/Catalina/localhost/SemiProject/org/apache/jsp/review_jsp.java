/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-13 15:55:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.lec.beans.*;

public final class review_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1604305648486L));
    _jspx_dependants.put("jar:file:/C:/Users/gbdld/Dropbox/JB10/SemiProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SemiProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.lec.beans");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- 이호인 리뷰 화면   -->\r\n");
      out.write("\r\n");
      out.write("\r\n");

	// Controller 로부터 결과 데이터 받음
ReviewDTO[] arr = (ReviewDTO[]) request.getAttribute("list");
String target = request.getParameter("target");
String keyword = request.getParameter("keyword");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/review.css\">\r\n");
      out.write("<title>왈왈 호텔</title>\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 호인 11/02 수정 -->\r\n");
      out.write("\t<!-- 헤더 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<section class=\"conA\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<h1>\r\n");
      out.write("\t\t\t\t<span style=\"color: #3f3f3f;\">이용 후기</span>\r\n");
      out.write("\t\t\t</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<section class=\"conG\">\r\n");
      out.write("\t\t");

			int pageNum = Integer.parseInt(request.getParameter("page").trim());
		int number = 0; // 총 글 갯수
		double totalStar = 0;
		double tsSum = 0;
		int totalCnt = 0;
		int akkk = 0;
		int pg = 0;
		int ak = 0; // 글 갯수 파악 
		if (arr != null) {
			for (ak = 0; ak < arr.length; ak++) {
				number++;
			}
		}
		akkk = number;
		pg = number / 10 + 1;
		if (pg >= 1) {
			pg = number / 10 + 1;
			if (number % 10 == 0) {
				pg = number / 10;
			}
		} else if (pg < 1) {
			pg = 1;
		}
		if (pageNum > pg) {
			pageNum = pg;
		} else if (pageNum < 1) {
			pageNum = 1;
		}
		int startP = pageNum * 10 - 10;
		if (number < 10) {

		} else if (number >= 10) {
			number -= pageNum * 10 - 10;
		}
		System.out.println("PAGE: " + pageNum);
		if(arr != null){
			for(int i = 0; i < arr.length; i++){
				tsSum += arr[i].getStar();
			}
			totalStar = tsSum / akkk*100;
			tsSum = (int)totalStar;
			totalStar = (double)tsSum/100;
			System.out.println("TOTALSTAR: " + totalStar);
		}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"containerZ\"> 평균 별점: ");
      out.print( totalStar );
      out.write("\r\n");
      out.write("\t\t");
if(totalStar >= 0 && totalStar < 2.0){
      out.write("\r\n");
      out.write("\t\t\t★☆☆☆☆\r\n");
      out.write("\t\t");
}else if(totalStar >= 2.0 && totalStar < 3.0){
      out.write("\r\n");
      out.write("\t\t\t★★☆☆☆\r\n");
      out.write("\t\t");
}else if(totalStar >= 3.0 && totalStar < 4.0){
      out.write("\r\n");
      out.write("\t\t\t★★★☆☆\r\n");
      out.write("\t\t");
}else if(totalStar >= 4.0 && totalStar < 5.0){
      out.write("\r\n");
      out.write("\t\t\t★★★★☆ \r\n");
      out.write("\t\t");
}else {
      out.write("\r\n");
      out.write("\t\t\t★★★★★\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"search\">\r\n");
      out.write("\t\t\t<form method=\"get\" action=\"review.do\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"page\" value=\"1\">\t\t\t\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<select name=\"target\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"\" selected>전체</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"subject\">제목</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"content\">내용</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"keyword\" value=\"\">\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\">검색</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div class=\"containerG\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"tbwid_15\">글 번호</th>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"tbwid_35\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"tbwid_15\">별점</th>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"tbwid_35\">등록일</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t");

					if (arr != null) {
					for (int i = startP; i < arr.length; i++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><a id=\"akak\" href=\"view.do?num=");
      out.print(arr[i].getNum());
      out.write('"');
      out.write('>');
      out.print(number);
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"text-align: left;\"><a id=\"akak\"\r\n");
      out.write("\t\t\t\t\t\t\thref=\"view.do?num=");
      out.print(arr[i].getNum());
      out.write('"');
      out.write('>');
      out.print(arr[i].getSubject());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t<!--<tdarr[i].getSubject()t() %></td>-->\r\n");
      out.write("\t\t\t\t\t\t<td><a id=\"akak\" href=\"view.do?num=");
      out.print(arr[i].getNum());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");

									if (arr[i].getStar() == 1) {
								
      out.write(" ★☆☆☆☆ ");

									} else if (arr[i].getStar() == 2) {
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t★★☆☆☆ ");

									} else if (arr[i].getStar() == 3) {
								
      out.write(" ★★★☆☆ ");

									} else if (arr[i].getStar() == 4) {
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t★★★★☆ ");

									} else if (arr[i].getStar() == 5) {
								
      out.write(" ★★★★★ ");

									}
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</a></td>\r\n");
      out.write("\t\t\t\t\t\t<td><a id=\"akak\" href=\"view.do?num=");
      out.print(arr[i].getNum());
      out.write('"');
      out.write('>');
      out.print(arr[i].getRegDate());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t");

					number--;
				totalCnt++;
				if (totalCnt == 10) {
					break;
				}
				} // end for
				} // end if
				System.out.println("pg: " + pg);
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div class=\"pageBt\">\r\n");
      out.write("\t\t");

		if(pageNum == 1 || pageNum == 0){
		
      out.write("\r\n");
      out.write("\t\t");

		} else {
		
      out.write("\r\n");
      out.write("\t\t\t");
if(target != null || keyword != null){ 
      out.write(" \r\n");
      out.write("\t\t\t<button class=\"backBtn\"\r\n");
      out.write("\t\t\t\tonclick=\"location.href = 'review.do?page=");
      out.print(pageNum - 1);
      out.write("&target=");
      out.print( target);
      out.write("&keyword=");
      out.print(keyword);
      out.write("'\">&lt;</button>\r\n");
      out.write("\t\t\t");
} else{ 
      out.write("\r\n");
      out.write("\t\t\t<button class=\"backBtn\"\r\n");
      out.write("\t\t\t\tonclick=\"location.href = 'review.do?page=");
      out.print(pageNum - 1);
      out.write("'\">&lt;</button>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t");

		}
			for (int i = 1; i <= pg; i++) {
			if (pageNum == i) {
		
      out.write("\r\n");
      out.write("\t\t\t\t");
if(target != null || keyword != null){ 
      out.write(" \r\n");
      out.write("\t\t\t\t<button class=\"pageBtn1\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'review.do?page=");
      out.print(i);
      out.write("&target=");
      out.print( target);
      out.write("&keyword=");
      out.print(keyword);
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</button>\r\n");
      out.write("\t\t\t\t");
} else{ 
      out.write("\r\n");
      out.write("\t\t\t\t<button class=\"pageBtn1\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'review.do?page=");
      out.print(i);
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</button>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t");

			} else {
		
      out.write("\r\n");
      out.write("\t\t\t\t");
if(target != null || keyword != null){ 
      out.write(" \r\n");
      out.write("\t\t\t\t<button class=\"pageBtn\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'review.do?page=");
      out.print(i);
      out.write("&target=");
      out.print( target);
      out.write("&keyword=");
      out.print(keyword);
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</button>\r\n");
      out.write("\t\t\t\t");
} else{ 
      out.write("\r\n");
      out.write("\t\t\t\t<button class=\"pageBtn\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'review.do?page=");
      out.print(i);
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</button>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t");

			}
		}
		if (pageNum == pg) {
		
      out.write("\r\n");
      out.write("\t\t");

			} else {
		
      out.write("\r\n");
      out.write("\t\t<button class=\"nextBtn\"\r\n");
      out.write("\t\t\tonclick=\"location.href = 'review.do?page=");
      out.print(pageNum + 1);
      out.write("'\">&gt;</button>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<section class=\"btnA\">\r\n");
      out.write("\t\t<div class=\"containerF\" style=\"margin-bottom: 370px\">\r\n");
      out.write("\t\t\t");

				if (session.getAttribute("c_num") != null) {
			
      out.write("\r\n");
      out.write("\t\t\t<button onclick=\"location.href = 'write.do'\">글 작성</button>\r\n");
      out.write("\t\t\t");

				} else {
			
      out.write("\r\n");
      out.write("\t\t\t<button onclick=\"location.href = 'login.jsp'\">글 작성</button>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!-- 푸터  -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
