/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-12 02:55:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.lec.beans.*;

public final class mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1604305648486L));
    _jspx_dependants.put("jar:file:/C:/Users/gbdld/Dropbox/JB10/SemiProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SemiProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.lec.beans");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	// Controller 로부터 결과 데이터 받음
CustomerDTO[] arr = (CustomerDTO[]) request.getAttribute("list");
ReservationDTO[] rarr = (ReservationDTO[]) request.getAttribute("rlist");
PetDTO[] parr = (PetDTO[]) request.getAttribute("plist");
Boolean chk = true;

String[] state = { "예약 종료", "예약 변경 가능", "투숙중" };
String color = "#c0c0c0";







      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/mypage.css\">\r\n");
      out.write("\r\n");
      out.write("<title>마이 페이지</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 헤더 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\t<!-- 컨텐츠A -->\r\n");
      out.write("\t<section class=\"conA\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"announce\">\r\n");
      out.write("\t\t\t\t<h3>");
      out.print(arr[0].getCus_name());
      out.write("님의 정보\r\n");
      out.write("\t\t\t\t</h3>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!-- 컨텐츠B -->\r\n");
      out.write("\t<section class=\"conB\">\r\n");
      out.write("\t\t");

			int pageNum = Integer.parseInt(request.getParameter("page").trim());
		int number = 0; // 총 글 갯수
		int totalCnt = 0;
		int pg = 0;
		int ak = 0; // 글 갯수 파악 
		if (rarr != null) {
			for (ak = 0; ak < rarr.length; ak++) {
				number++;
			}
		}
		pg = number / 10 + 1;
		if (pg >= 1) {
			pg = number / 10 + 1;
			if (number % 10 == 0) {
				pg = number / 10;
			}
		} else if (pg < 1) {
			pg = 1;
		}
		if (pageNum > pg) {
			pageNum = pg;
		} else if (pageNum < 1) {
			pageNum = 1;
		}
		int startP = pageNum * 10 - 10;
		if (number < 10) {

		} else if (number >= 10) {
			number -= pageNum * 10 - 10;
		}
		System.out.println("PAGE: " + pageNum);
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>예약 날짜</th>\r\n");
      out.write("\t\t\t\t\t\t<th>예약 종료 날짜</th>\r\n");
      out.write("\t\t\t\t\t\t<th>강아지 이름</th>\r\n");
      out.write("\t\t\t\t\t\t<th>예약 상태</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t");

						if (rarr == null || rarr.length == 0) {
						chk = false;
					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						if (chk) {

						String[] pet_name = new String[rarr.length];
						if (chk) {
							for (int i = 0; i < rarr.length; i++) {
						for (int j = 0; j < parr.length; j++) {
							if (rarr[i].getPet_num() == parr[j].getPet_num()) {
								pet_name[i] = parr[j].getPet_name();
								break;
							}
						}
							}
						}
						for (int i = startP; i < rarr.length; i++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						if (rarr[i].getRes_state() == 0) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr id=\"reserve_list\" bgcolor=");
      out.print(color);
      out.write("\r\n");
      out.write("\t\t\t\t\t\tonclick=\"chkReserve('reserve_update.do?pet_name=");
      out.print(pet_name[i]);
      out.write("&num=");
      out.print(rarr[i].getRes_num());
      out.write("')\">\r\n");
      out.write("\t\t\t\t\t\t");

							} else {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr id=\"reserve_list\"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"chkReserve('reserve_update.do?pet_name=");
      out.print(pet_name[i]);
      out.write("&num=");
      out.print(rarr[i].getRes_num());
      out.write("')\">\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td id=\"akak\" class=\"startdate\">");
      out.print(rarr[i].getRes_startdate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"akak\" class=\"lastdate\">");
      out.print(rarr[i].getRes_lastdate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"akak\">");
      out.print(pet_name[i]);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"akak\">");
      out.print(state[rarr[i].getRes_state()]);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

						} // end for
					}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"pageBt\">\r\n");
      out.write("\t\t\t\t");

					if (pageNum == 1) {

				} else {
				
      out.write("\r\n");
      out.write("\t\t\t\t<button class=\"backBtn\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'mypage.do?page=");
      out.print(pageNum - 1);
      out.write("'\">&lt;</button>\r\n");
      out.write("\t\t\t\t");

					}
				for (int i = 1; i <= pg; i++) {
					if (pageNum == i) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<button class=\"pageBtn1\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'rmypage.do?page=");
      out.print(i);
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</button>\r\n");
      out.write("\t\t\t\t");

					} else {
				
      out.write("\r\n");
      out.write("\t\t\t\t<button class=\"pageBtn\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'mypage.do?page=");
      out.print(i);
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</button>\r\n");
      out.write("\t\t\t\t");

					}
				}
				if (pageNum == pg) {
				
      out.write("\r\n");
      out.write("\t\t\t\t");

					} else {
				
      out.write("\r\n");
      out.write("\t\t\t\t<button class=\"nextBtn\"\r\n");
      out.write("\t\t\t\t\tonclick=\"location.href = 'mypage.do?page=");
      out.print(pageNum + 1);
      out.write("'\">&gt;</button>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 컨텐츠C -->\r\n");
      out.write("\t<section class=\"conC\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><h3>뼈다귀 현황</h3></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<h2>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(arr[0].getCus_money());
      out.write("<i class=\"fas fa-bone\"></i>\r\n");
      out.write("\t\t\t\t\t\t</h2>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><button id=\"cashbtn\" onclick=\"chargeopen()\">충전</button></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 푸터 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\" src=\"JS/charge.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"JS/mypage.js\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
