/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-05 12:14:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.lec.beans.*;

public final class reserve_005fupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.lec.beans");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/b95da9d126.js\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/reserve_update.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<title>예약 보기</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");

	ReservationDTO [] rarr  = (ReservationDTO[])request.getAttribute("rlist");
	String pet_name=request.getParameter("pet_name");
	String state="";
	String url= "reserve_modify.do";

	switch(rarr[0].getRes_state()){
	case 0:
		state="예약 종료";
		break;
	case 1:
		state="예약 변경가능";
		break;
	case 2:
		state="투숙 중";
		break;
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 헤더 -->\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<i class=\"fas fa-dog\"></i>\r\n");
      out.write("\t\t\t<h2>예약 현황</h2>\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"X\" onClick=\"self.close();\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("\t<section class=\"conA\">\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("<form name=\"frm\"  id=\"contact-form\" action=\"loginOk.do\" method=\"post\">\r\n");
      out.write("\t<div id=\"content-header\">\r\n");
      out.write("\t\t<h3>");
      out.print(pet_name );
      out.write("의 예약 내용</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<label>예약 상태 : ");
      out.print(state );
      out.write("</label>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<label>예약 날짜 :</label>\r\n");
      out.write("\t\t<label>");
      out.print(rarr[0].getRes_startdate() );
      out.write(' ');
      out.write('~');
      out.write(' ');
      out.print(rarr[0].getRes_lastdate() );
      out.write("</label>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<label>예약 내용 :</label>\r\n");
      out.write("\t\t<label>");
      out.print(rarr[0].getRes_sinfo() );
      out.write("</label>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<label>건의 사항 :</label>\r\n");
      out.write("\t\t<label>");
      out.print(rarr[0].getRes_message() );
      out.write("</label>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t");

		if(rarr[0].getRes_state()==0){
	
      out.write("\t\t\r\n");
      out.write("\t\t\t<input type=\"button\" class=\"navyBtn\" value=\"리뷰남기기\" onClick=\"goReview()\">\r\n");
      out.write("\t");
 	
		}else if(rarr[0].getRes_state()==1){
	
      out.write("\t\r\n");
      out.write("\t\t\t<input type=\"button\" class=\"navyBtn\" value=\"예약변경\" onClick=\"goModify(");
      out.print(rarr[0].getRes_num());
      out.write(',');
      out.print(rarr[0].getPet_num());
      out.write(")\"/>\r\n");
      out.write("\t\t\t<input type=\"button\" class=\"navyBtn\" value=\"예약취소\" onClick=\"chkDelete(");
      out.print(rarr[0].getRes_num());
      out.write(',');
      out.print(rarr[0].getPet_num() );
      out.write(")\"/>\r\n");
      out.write("\t");
 
	}else{
	}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</section>\t\r\n");
      out.write("\t<!-- 푸터 -->\r\n");
      out.write("\t<footer>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<button class=\"bacc\" id=\"bacc\" onclick='byebye()'>\r\n");
      out.write("\t\t\t\t<h2>돌아가기</h2>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</footer>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\" src=\"JS/reserve_update.js\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
