/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-17 06:43:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1604305648486L));
    _jspx_dependants.put("jar:file:/C:/Users/gbdld/Dropbox/JB10/SemiProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SemiProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 로그인페이지, 이주혁 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 메인 페이지  -->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/index.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/login.css\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Jua&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/b95da9d126.js\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\tfunction checkLoginStatus(){\r\n");
      out.write("\t\tvar loginBtn = document.querySelector('#loginBtn');\r\n");
      out.write("\t\tvar nameTxt = document.querySelector('#name');\r\n");
      out.write("    \tif(gauth.isSignedIn.get()){\r\n");
      out.write("    \t\tconsole.log('logined');\r\n");
      out.write("    \t\tloginBtn.value = 'Logout';\r\n");
      out.write("    \t\tvar profile = gauth.currentUser.get().getBasicProfile();\r\n");
      out.write("    \t\tconsole.log(profile.getName());\r\n");
      out.write("    \t\tconsole.log(profile.getId());\r\n");
      out.write("    \t\tconsole.log(profile.getEmail());\r\n");
      out.write("    \t\tnameTxt.innerHTML = 'Welcome <strong>'+profile.getName()+'</strong> ';\r\n");
      out.write("    \t\t//insert되어있으면\r\n");
      out.write("    \t\t//location.href = \"googleloginOk.do?c_id=\"+profile.getId().substring(0,15)+\"&c_pw=1234\"\r\n");
      out.write("    \t\t//insert안되어있으면\r\n");
      out.write("    \t\tgauth.signOut();\r\n");
      out.write("    \t\tlocation.href = \"googleloginOk.do?c_id=\"+profile.getId().substring(0,15)+\"&c_pw=1234&c_name=\"+profile.getName()+\"&c_phone=010-0000-0000&c_email=\"+profile.getEmail();\r\n");
      out.write("    \t} else {\r\n");
      out.write("    \t\tconsole.log('logouted');\r\n");
      out.write("    \t\tloginBtn.value = 'Login';\r\n");
      out.write("    \t\tnameTxt.innerHTML = '';\r\n");
      out.write("    \t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction init() {\r\n");
      out.write("\t\t  console.log('init');\r\n");
      out.write("\t\t  gapi.load('auth2', function() {\r\n");
      out.write("\t\t    console.log('auth2');\r\n");
      out.write("\t\t    window.gauth = gapi.auth2.init({\r\n");
      out.write("\t\t    \tclient_id:'147019076427-3regscr3mak8nai0q7hm42n8237vv253.apps.googleusercontent.com'\r\n");
      out.write("\t\t    })\r\n");
      out.write("\t\t    gauth.then(function(){\r\n");
      out.write("\t\t    \tconsole.log('googleAuth success');\r\n");
      out.write("\t\t    \tcheckLoginStatus();\r\n");
      out.write("\t\t    }, function(){\r\n");
      out.write("\t\t    \tconsole.log('googleAuth fail');\r\n");
      out.write("\t\t    })\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("<title>LOGIN</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 헤더 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<section class=\"conA\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form name=\"frm\" id=\"contact-form\" action=\"loginOk.do\" method=\"post\"\r\n");
      out.write("\t\t\t\tonsubmit=\"return chkSubmit()\">\r\n");
      out.write("\t\t\t\t<div id=\"content-header\">\r\n");
      out.write("\t\t\t\t\t<h3>로그인</h3>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<label>ID :</label> <input type=\"text\" name=\"c_id\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"아이디를 입력해 주세요.\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<label>PW :</label> <input type=\"password\" name=\"c_pw\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"비밀번호를 입력해 주세요.\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<input type=\"submit\" id=\"logbtn\" class=\"hc vc\" value=\"LOGIN\" />\r\n");
      out.write("\t\t\t\t<div id=\"form_bottom\">\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" class=\"navyBtn\" value=\"회원가입\"\r\n");
      out.write("\t\t\t\t\t\tonClick=\"location.href='signUp.jsp'\"> <input type=\"button\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"navyBtn\" value=\"아이디 찾기\"\r\n");
      out.write("\t\t\t\t\t\tonClick=\"location.href='find_id.jsp'\"> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"button\" class=\"navyBtn\" value=\"비밀번호 찾기\"\r\n");
      out.write("\t\t\t\t\t\tonClick=\"location.href='find_pw.jsp'\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- <span id=\"name\"></span><input type=\"button\" id=\"loginBtn\" value=\"checking...\" onclick=\"\r\n");
      out.write("\t\t\t\t\tif(this.value == 'Login'){\r\n");
      out.write("\t\t\t\t\t\tgauth.signIn().then(function(){\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log('gauth.signIn()');\r\n");
      out.write("\t\t\t\t\t\t\tcheckLoginStatus();\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t//parmeter로 가지고 loginOk.do로 쏘자\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tgauth.signOut().then(function(){\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log('gauth.signOut()');\r\n");
      out.write("\t\t\t\t\t\t\tcheckLoginStatus();\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\">  -->\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!-- 푸터 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\t<script src=\"https://apis.google.com/js/platform.js?onload=init\" async defer></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"JS/index.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"JS/login.js\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
